[gd_scene load_steps=6 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_d7ako"]
[ext_resource type="Texture2D" path="res://sm63/LIBRARY/Course Items-PL/Blocks&#044 Tiles & Other Textures/Ancient & Clock & Haunted/Tick Battery 2.png" id="2_1s1w8"]

[sub_resource type="Animation" id="Animation_dn2dw"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 2/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 1/Frame 0:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_o4x1o"]
_data = {
"Default": SubResource("Animation_dn2dw")
}

[sub_resource type="GDScript" id="GDScript_ea5ns"]
script/source = "extends Node
# stop();
# //
# if (DirectionX == undefined) {
# 	DirectionX = \"Right\";
# }
# if (DirectionY == undefined) {
# 	DirectionY = \"Up\";
# }
# if (distanceX == undefined) {
# 	distanceX = 0;
# }
# if (distanceY == undefined) {
# 	distanceY = 0;
# }
# if (accelX == undefined) {
# 	accelX = 0;
# }
# if (accelY == undefined) {
# 	accelY = 0;
# }
# if (speedX == undefined) {
# 	speedX = 0;
# }
# if (speedY == undefined) {
# 	speedY = 0;
# }
# if (Xoffstart == undefined) {
# 	Xoffstart = 0;
# }
# if (Yoffstart == undefined) {
# 	Yoffstart = 0;
# }
# if (DirectionY == \"Up\") {
# 	_y -= speedY;
# } else {
# 	_y += speedY;
# }
# if (DirectionY == \"Right\") {
# 	_x -= speedX;
# } else {
# 	_x += speedX;
# }
# if (scale == undefined) {
# 	scale = 100;
# }
# if (blocktype == undefined) {
# 	blocktype = 1;
# }
# if (angleoffset == undefined) {
# 	angleoffset = 0;
# }
# if (rotamount == undefined) {
# 	rotamount = 120;
# }
# //                           
# if (rotdirection == undefined) {
# 	rotdirection = \"Left\";
# }
# if (rotspeed == undefined) {
# 	rotspeed = 3;
# }
# if (rotwait == undefined) {
# 	rotwait = 92;
# }
# if (quake == undefined && rotwait>20) {
# 	quake = true;
# } else {
# 	quake = true;
# }
# _yscale = scale;
# _xscale = scale;
# gotoAndStop(blocktype);
# _rotation = angleoffset;
# count = 0;
# spincount = 0;
# onEnterFrame = function () {
# 	count++;
# 	if (count>rotwait) {
# 		spincount++;
# 		if ((spincount*rotspeed)<=rotamount) {
# 			if (this.rotdirection == \"Right\") {
# 				_rotation += this.rotspeed;
# 			}
# 			if (this.rotdirection == \"Left\") {
# 				_rotation -= this.rotspeed;
# 			}
# 		} else {
# 			count = 0;
# 			spincount = 0;
# 			_rotation -= this.angleoffset;
# 			_rotation = (Math.round(_rotation/rotamount)*rotamount)+angleoffset;
# 		}
# 	}
# 	//                                              
# 	//if (this.quake == true) {
# 	if (count+20>this.rotwait && count<this.rotwait) {
# 		_rotation -= this.angleoffset;
# 		_rotation = (Math.round(_rotation/this.rotamount)*this.rotamount)+this.angleoffset;
# 		_rotation += Math.random()*5-2.5;
# 	}
# };
# "

[node name="LD Rotating Triangle Preview" type="Node2D"]
script = ExtResource("1_d7ako")
source_xml = "res://sm63/LIBRARY/LD Rotating Triangle Preview.xml"
linkage = ""
linkage_export = false
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_o4x1o")
}

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="Group" type="Node2D" parent="Layer 1/Frame 0"]
position = Vector2(0.05, -0.3)

[node name="Shape" type="Node2D" parent="Layer 1/Frame 0/Group"]

[node name="@@8755" type="Polygon2D" parent="Layer 1/Frame 0/Group/Shape"]
texture_filter = 1
texture_repeat = 2
texture = ExtResource("2_1s1w8")
texture_offset = Vector2(-36.0137, -79.3778)
texture_scale = Vector2(1.33333, 1.33333)
texture_rotation = -2.09439
polygon = PackedVector2Array(29.775, -17.7, 29.775, -17.7, 29.9, -17.625, 21.5666, -3.2, 6.09387, -3.2, 29.6525, -17.625, 6.09387, -3.2, 21.5666, -3.2, 17.8693, 3.2, 0, 3.2, 2.25, 2.25, 3.2, 0, 2.95, -1.275, 4.62401, -2.3, -0.15, 3.2, 17.8693, 3.2, -0.025, 34.175, -0.025, 34.175, -0.2, 34.075)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3, 4, 5), PackedInt32Array(6, 7, 8, 9, 10, 11, 12, 13), PackedInt32Array(14, 15, 16, 17, 18)])

[node name="@@8756" type="Polygon2D" parent="Layer 1/Frame 0/Group/Shape"]
texture_filter = 1
texture_repeat = 2
texture = ExtResource("2_1s1w8")
texture_offset = Vector2(107.75, 16.75)
texture_scale = Vector2(1.33333, 1.33333)
polygon = PackedVector2Array(-30.05, -17.7, 29.775, -17.7, 6.09387, -3.2, -5.87666, -3.2, -29.775, -17.25, -29.975, -17.575, -30.005, -17.625, -5.87666, -3.2, 0, -3.2, -2.3, -2.3, -2.9, -1.45, -2.9, -1.45, -4.34581, -2.3, 0, -3.2, 6.09387, -3.2, 2.95, -1.275, 2.95, -1.275, 2.25, -2.3)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3, 4, 5, 6), PackedInt32Array(7, 8, 9, 10, 11, 12), PackedInt32Array(13, 14, 15, 16, 17)])

[node name="@@8757" type="Polygon2D" parent="Layer 1/Frame 0/Group/Shape"]
color = Color(0.6, 0.6, 0.6, 1)
polygon = PackedVector2Array(0, -3.2, 0, -3.2, 2.25, -2.3, 2.95, -1.275, 3.2, 0, 2.25, 2.25, 0, 3.2, -0.15, 3.2, -2.3, 2.25, -3.2, 0, -2.9, -1.45, -2.3, -2.3)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)])

[node name="@@8758" type="Polygon2D" parent="Layer 1/Frame 0/Group/Shape"]
texture_filter = 1
texture_repeat = 2
texture = ExtResource("2_1s1w8")
texture_offset = Vector2(-36.2725, 65.0255)
texture_scale = Vector2(1.33333, 1.33333)
texture_rotation = 2.0944
polygon = PackedVector2Array(-29.775, -17.25, -29.775, -17.25, -2.9, -1.45, -3.2, 0, -19.8387, 0, -29.55, -16.85, -19.8387, 0, -3.2, 0, -2.3, 2.25, -0.15, 3.2, -0.2, 34.075, -0.2, 34.075, -18.5419, 2.25)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3, 4, 5), PackedInt32Array(6, 7, 8, 9, 10, 11, 12)])

[node name="@@8759" type="Line2D" parent="Layer 1/Frame 0/Group/Shape"]
points = PackedVector2Array(2.95, -1.275, 3.2, 0, nan, nan, 3.2, 0, 2.25, 2.25, nan, nan, 2.25, 2.25, 0, 3.2, nan, nan, 0, 3.2, -0.15, 3.2, nan, nan, -0.2, 34.075, -0.025, 34.175, nan, nan, -0.025, 34.175, -0.075, 34.275, nan, nan, -0.2, 34.075, -0.075, 34.275, nan, nan, -29.55, -16.85, -0.2, 34.075, nan, nan, -29.975, -17.575, -29.55, -16.85, nan, nan, -30.05, -17.7, -29.975, -17.575, nan, nan, -30.05, -17.7, 29.775, -17.7, nan, nan, 29.775, -17.7, 29.9, -17.625, nan, nan, 29.95, -17.7, 29.9, -17.625, nan, nan, 29.95, -17.7, 29.775, -17.7, nan, nan, -2.3, -2.3, -2.9, -1.45, nan, nan, 0, -3.2, -2.3, -2.3, nan, nan, 0, -3.2, 2.25, -2.3, nan, nan, 2.25, -2.3, 2.95, -1.275, nan, nan, -2.3, 2.25, -0.15, 3.2, nan, nan, -3.2, 0, -2.3, 2.25, nan, nan, -2.9, -1.45, -3.2, 0, nan, nan, 29.9, -17.625, -0.025, 34.175, nan, nan)
width = 1.0
default_color = Color(0, 0, 0, 1)
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="AS2" type="Node" parent="Layer 2/Frame 0"]
script = SubResource("GDScript_ea5ns")
