[gd_scene load_steps=16 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_dkf85"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_qd3b3"]

[sub_resource type="Animation" id="Animation_lter8"]
length = 0.133333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 2/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 2/Frame 1:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Layer 2/Frame 2:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Layer 2/Frame 3:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.133333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Layer 4/Frame 0:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Layer 4/Frame 3:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.1, 0.133333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Layer 3/Frame 0:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Layer 3/Frame 3:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 0.1, 0.133333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Layer 1/Frame 0:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.133333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_5bjg8"]
_data = {
"Default": SubResource("Animation_lter8")
}

[sub_resource type="GDScript" id="GDScript_6s6rs"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_j74eg"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_iajy0"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_euhi1"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_slw6l"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_d06de"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_jyeit"]
script/source = "extends Node
# onClipEvent (load) {
# 	visible = false;
# }
# "

[sub_resource type="GDScript" id="GDScript_x2bdk"]
script/source = "extends Node
# frame = 1;
# attackFrame = \"\";
# attack = false;
# air = false;
# idlecount = 0;
# HP = 3;
# tall = 60;
# wide = 60;
# yspeed = 0;
# xspeed = 0;
# blink = 0;
# gettingbackoncourse = false;
# //
# OEF = function () {
# 	_root.Camcenter = _root.Course.FrontGFX.Bowser;
# 	_root.PauseGame = false;
# };
# if (difficulty == 1) {
# 	Message1 = function () {
# 		_root.CinemaMessageFrame = 3;
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> Tough Luck! Looks like the Princess isn't here... Gwa ha ha!! Go ahead! Just try to grab me by the tail!\";
# 	};
# 	Message2 = function () {
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> A wimp like you could never dive into my tail to grab it and swing me around by pressing Right and Left repeatedly!\";
# 	};
# } else if (difficulty == 2) {
# 	Message1 = function () {
# 		_root.CinemaMessageFrame = 3;
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> Hahaha!! Mario, You think by appearing here that you'd be able to stop my Master Plan!!\";
# 	};
# 	Message2 = function () {
# 		clip.gotoAndStop(\"Orb\");
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> I've retrieved what I needed down here, and was just about to leave when you showed up.\";
# 	};
# 	Message3 = function () {
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> I was getting worried you caught onto my plan, and was trying to stop me;  but of course \";
# 	};
# 	Message4 = function () {
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> your ignorance has lead you straight into another trap of mine.  Now, with you here,\";
# 	};
# 	Message5 = function () {
# 		clip.frame.gotoAndPlay(\"end\");
# 		_root.CinemaMessage = \"<b><i>Bowser:</i></b> I can go straight ahead to the next step in my Master Plan... which is to ..... DESTROY YOU!\";
# 	};
# } else {
# 	
# }
# messcount = 0;
# loopcode = function () {
# 	messcount++;
# 	if (this[\"Message\"+messcount] !== undefined) {
# 		this[\"Message\"+messcount]();
# 		lastframeZ = _root.KeyZ();
# 		onEnterFrame = function () {
# 			OEF();
# 			if (_root.KeyZ() == true && lastframeZ !== true && _root.CinemaMessageFinished == true) {
# 				_root.CinemaMessage = \"\";
# 				loopcode();
# 			}
# 			lastframeZ = _root.KeyZ();
# 		};
# 	} else {
# 		loopcode = null;
# 		end();
# 	}
# };
# onEnterFrame = function () {
# 	if (_root.PauseGame == false) {
# 		_root.Controll = false;
# 		if (_root.Course.Char.air == false) {
# 			gotoAndStop(3);
# 			//
# 			onEnterFrame = function () {
# 				// Talking
# 				if (_root.Course.Char.air == false) {
# 					_root.Course.Char.attack = true;
# 					_root.Course.Char.attackFrame = \"bosscinema\";
# 					_root.Course.Char._xscale = -100;
# 					_root.playpause = true;
# 					loopcode();
# 				}
# 			};
# 		}
# 	}
# };
# end = function () {
# 	if (difficulty == 2) {
# 		clip.frame.gotoAndPlay(\"end\");
# 	}
# 	count = 0;
# 	onEnterFrame = function () {
# 		count++;
# 		if (count>10) {
# 			//   
# 			clip.gotoAndStop(1);
# 			_root.Course.Char.attack = false;
# 			//
# 			_root.playpause = false;
# 			onEnterFrame = null;
# 			_root.Camcenter = \"none\";
# 			//
# 			//_root.StopBGsong();
# 			//_root.StartBossMusic();
# 			//
# 			nextFrame();
# 		}
# 	};
# };
# "

[sub_resource type="GDScript" id="GDScript_m0q5a"]
script/source = "extends Node
# stop();
# "

[sub_resource type="GDScript" id="GDScript_opbec"]
script/source = "extends Node
# stop();
# _root.Course.BackGFX.StartClip._y = -100;
# "

[sub_resource type="GDScript" id="GDScript_re75a"]
script/source = "extends Node
# stop();
# // BowserGround
# depth = _root.Course.Platforms.getNextHighestDepth();
# _root.Course.Platforms.attachMovie(\"BowserGround\", \"BowserGround\"+depth, depth, {_x:_x, _y:_y});
# X = 0;
# onEnterFrame = function () {
# 	if (_root.PauseGame == false) {
# 		if (!(HP<=0 && attack == true && attackFrame == \"recover\")) {
# 			_root.Camcenter = _root.Course.BackGFX.camCenter;
# 			if (attack == false || attackFrame !== \"spin\") {
# 				if (_root.CameraZoom<100-Math.max((_root.Course.BackGFX.distance/3)-100, 0)) {
# 					_root.CameraZoom++;
# 				}
# 				if (_root.CameraZoom>95-Math.max((_root.Course.BackGFX.distance/3)-100, 0)) {
# 					_root.CameraZoom--;
# 				}
# 			}
# 			//
# 			if (attack == true && attackFrame == \"spin\" && (_root.Course.Char.attack !== true || !(_root.Course.Char.attackFrame == \"DiveSpin\" || _root.Course.Char.attackFrame == \"JumpSpin\"))) {
# 				attack = false;
# 			}
# 			if ((attack == false || attackFrame !== \"spin\") && attackFrame !== \"tossed\" && attackFrame !== \"hurt\" && _root.Course.Char.attack == true && (_root.Course.Char.attackFrame == \"DiveSpin\" || _root.Course.Char.attackFrame == \"JumpSpin\")) {
# 				//attack = true;
# 				//attackFrame = \"spin\";
# 			}
# 			//                                 
# 			if (attack == true) {
# 				//idlecount = 0;
# 			} else {
# 				idlecount++;
# 				if (difficulty == 2) {
# 					idlecount += 0.5;
# 				}
# 				idlecounts = idlecount/_root.framerate;
# 			}
# 			while ((_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) && !(_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true))) {
# 				_y++;
# 			}
# 			while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				_y--;
# 			}
# 			// Walls
# 			while (_root.Course.Platforms.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				_x--;
# 			}
# 			while (_root.Course.Platforms.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				_x++;
# 			}
# 			// ^ Walls
# 			//
# 			if (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				if (air == true) {
# 					idlecount = 0;
# 					idlecounts = 0;
# 				}
# 				if (air == true && shockwave == true) {
# 					//
# 					attack = true;
# 					attackFrame = \"Shockwave\";
# 					//
# 					shockwave = false;
# 				}
# 				air = false;
# 				gettingbackoncourse = true;
# 			} else {
# 				if (air == false) {
# 					idlecount = 0;
# 					idlecounts = 0;
# 				}
# 				air = true;
# 			}
# 			//
# 			if (air == false) {
# 				if (attack == false || (attackFrame !== \"tossed\" && attackFrame !== \"hurt\" && attackFrame !== \"defeated\" || attackFrame !== \"spin\")) {
# 					frame = 1;
# 					yspeed = Math.min(yspeed, 0);
# 					xspeed = _root.groundFriction(xspeed, 1, 1.1);
# 				} else {
# 					if (yspeed>3) {
# 						yspeed = Math.min(-yspeed*0.3, 0);
# 						xspeed = _root.groundFriction(xspeed, 1, 1.1);
# 					} else {
# 						if (yspeed>-3) {
# 							yspeed = 0;
# 							xspeed = _root.groundFriction(xspeed, 1, 1.1);
# 						} else {
# 							yspeed += 0.5;
# 						}
# 					}
# 				}
# 			}
# 			if (air == true) {
# 				//
# 				//if (_y-_root.Course.FrontGFX._y<_root.Course.Char._y) {
# 				_x -= X;
# 				//}
# 				//   
# 				if (Math.abs(yspeed)<-7 || Math.abs(yspeed)>7) {
# 					yspeed += 0.1;
# 				} else {
# 					yspeed += 0.3;
# 				}
# 				if (yspeed>3) {
# 					frame = 4;
# 				} else {
# 					frame = 3;
# 				}
# 				if (Math.abs(yspeed)>7) {
# 					if(difficulty !== 3 || gettingbackoncourse == true){
# 						yspeed = _root.groundFriction(yspeed, 0.3, 1.1);
# 					}
# 				}
# 			}
# 			// HitTests                                                                                                                                
# 			if (attack == false || (attackFrame !== \"tossed\" && attackFrame !== \"hurt\" && attackFrame !== \"defeated\" || attackFrame !== \"spin\")) {
# 				if (this.lbod.hitTest(_root.Course.Char.charClip.body)) {
# 					if (_xscale>0) {
# 						_root.MarioHit(1, 30, -5, -7, 7, \"\");
# 					} else {
# 						_root.MarioHit(1, 30, -5, 7, 7, \"\");
# 					}
# 				}
# 				if (this.rbod.hitTest(_root.Course.Char.charClip.body)) {
# 					if (_xscale>0) {
# 						_root.MarioHit(2, 30, -5, 7, 7, \"\");
# 					} else {
# 						_root.MarioHit(2, 30, -5, -7, 7, \"\");
# 					}
# 				}
# 				if (this.spikes.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.air == true && _root.Course.Char.yspeed>0) {
# 					if (_root.Course.Char._x>_x+_parent._x) {
# 						_root.MarioHit(2, 30, -9, 3, 7, \"\");
# 					} else {
# 						_root.MarioHit(2, 30, -9, -3, 7, \"\");
# 					}
# 				}
# 				if (this.head.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.air == true && _root.Course.Char.yspeed>0) {
# 					if (_xscale>0) {
# 						_root.MarioHit(2, 30, -5, -2, 7, \"\");
# 					} else {
# 						_root.MarioHit(2, 30, -5, 2, 7, \"\");
# 					}
# 				}
# 				if (this.feet.hitTest(_root.Course.Char.charClip.body)) {
# 				}
# 				if (blink<0) {
# 					blink++;
# 					if (blink%2 == 0) {
# 						_alpha = 20;
# 					} else {
# 						_alpha = 80;
# 					}
# 				} else {
# 					_alpha = 100;
# 				}
# 				if (this.tail.hitTest(_root.Course.Char.charClip.body) && _root.Course.Char.attack == true && _root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.air == false && blink>=0) {
# 					if (attackFrame !== \"turn\" || attack == false) {
# 						_root.Course.Char.attack = true;
# 						if (difficulty !== 3) {
# 							_root.Course.Char.attackFrame = \"DiveSpin\";
# 						} else {
# 							_root.Course.Char.attackFrame = \"JumpSpin\";
# 						}
# 						attack = true;
# 						attackFrame = \"spin\";
# 						//
# 						_root.Course.Char._x = _root.Course.FrontGFX._x+_x+(_xscale/100*(wide/2));
# 						_root.Course.Char._y = _root.Course.FrontGFX._y+_y;
# 						//
# 						_root.bgsoundFX = new Sound(this);
# 						_root.bgsoundFX.attachSound(\"Bowser - Grab\");
# 						_root.bgsoundFX.start(0, 1);
# 						_root.bgsoundFX.setVolume(_root.BgVolume);
# 					}
# 				}
# 			}
# 			// ^ hitTest ^                                                                                                                                                   
# 			// Attacks   
# 			if (idlecounts>3 && attack == false && air == false) {
# 				if (_xscale>0 && (_x+_parent._x)-_root.Course.Char._x<-10) {
# 					attack = true;
# 					attackFrame = \"turn\";
# 				} else if (_xscale<0 && (_x+_parent._x)-_root.Course.Char._x>10) {
# 					attack = true;
# 					attackFrame = \"turn\";
# 				}
# 			}
# 			if (attack == false && air == false) {
# 				randomnum = random(32*1.5)+1;
# 				if (randomnum == 1) {
# 					if (_xscale<0 && (_x+_parent._x)-_root.Course.Char._x<-10) {
# 						attack = true;
# 						attackFrame = \"step\";
# 					} else if (_xscale>0 && (_x+_parent._x)-_root.Course.Char._x>10) {
# 						attack = true;
# 						attackFrame = \"step\";
# 					}
# 				}
# 			}
# 			if (idlecounts>3 && attack == false && air == false) {
# 				randomnum = random(9)+1;
# 				if (difficulty == 2) {
# 					if (_root.Course.Char.yspeed<0) {
# 						X = _x+_root.Course.FrontGFX._x;
# 						X = (X-_root.Course.Char._x);
# 						if (random(4) == 1 && Math.abs(X)<200) {
# 							randomnum = 8;
# 						}
# 					}
# 					if (randomnum>=8) {
# 						if (random(2) == 1) {
# 							randomnum = random(9)+1;
# 						}
# 					}
# 				}
# 				if (_root.Course.Char._y<_y-_root.Course.FrontGFX._y) {
# 					randomnumber = random(8)+1;
# 					if (randomnumber>=3) {
# 						randomnum = 8;
# 					}
# 				}
# 				if (randomnum == 1 || randomnum == 2 || randomnum == 3) {
# 					attack = true;
# 					attackFrame = \"fire1\";
# 				} else if (randomnum == 4 || randomnum == 5) {
# 					attack = true;
# 					attackFrame = \"fire2\";
# 				} else {
# 					attack = true;
# 					attackFrame = \"Jumping\";
# 					/*
# 					idlecount = 0;
# 					idlecounts = 0;
# 					shockwave = true;
# 					yspeed = -12;
# 					//
# 					X = _x+_root.Course.FrontGFX._x;
# 					X = (X-_root.Course.Char._x)/40;
# 					X = Math.min(X, 1);
# 					X = Math.max(X, -1);
# 					*/
# 				}
# 			}
# 			if (idlecounts>0.3 && attack == false && air == true && yspeed<0) {
# 				randomnum = random(4)+1;
# 				if (randomnum<=2) {
# 					attack = true;
# 					attackFrame = \"fire1air\";
# 				} else if (randomnum == 3) {
# 					attack = true;
# 					attackFrame = \"fire2air\";
# 				} else {
# 					attack = true;
# 					attackFrame = \"fire3air\";
# 				}
# 			}
# 			//                                                                                                                          
# 			if (attack == true && attackFrame == \"tossed\") {
# 				if (air == false && (Math.abs(yspeed)<3 || Math.abs(xspeed)<3)) {
# 					attack = false;
# 				}
# 				if (_root.Course.BackGFX.Bomb.hitTest(0, 0, false) && gettingbackoncourse == false) {
# 					attack = true;
# 					attackFrame = \"hurt\";
# 					xspeed = -(_xscale/100)*15;
# 				}
# 			}
# 			if (difficulty !== 3) {
# 				if (this.body.hitTest(_root.Course.BackGFX.bomb1) && _root.Course.BackGFX.bombgfx1._currentframe == 1 && attackFrame == \"tossed\" && attack == true) {
# 					attack = true;
# 					xspeed *= -0.5;
# 					xspeed += 5;
# 					xspeed = Math.min(xspeed, 8);
# 					xspeed = Math.max(xspeed, -8);
# 					yspeed = -7;
# 					attackFrame = \"hurt\";
# 					HP -= 1;
# 					_root.Course.BackGFX.bombgfx1.gotoAndStop(2);
# 				}
# 				if (this.body.hitTest(_root.Course.BackGFX.bomb2) && _root.Course.BackGFX.bombgfx2._currentframe == 1 && attackFrame == \"tossed\" && attack == true) {
# 					attack = true;
# 					xspeed *= -0.5;
# 					xspeed -= 5;
# 					xspeed = Math.min(xspeed, 8);
# 					xspeed = Math.max(xspeed, -8);
# 					yspeed = -7;
# 					attackFrame = \"hurt\";
# 					HP -= 1;
# 					_root.Course.BackGFX.bombgfx2.gotoAndStop(2);
# 				}
# 			} else {
# 				for (i=1; i<6; i++) {
# 					if (this.body.hitTest(_root.Course.BackGFX[\"bomb\"+i]) && _root.Course.BackGFX[\"bombgfx\"+i]._currentframe == 1 && attackFrame == \"tossed\" && attack == true && gettingbackoncourse == false) {
# 						attack = true;
# 						xspeed *= -0.5;
# 						if (_x>0) {
# 							xspeed -= 5;
# 						} else {
# 							xspeed += 5;
# 						}
# 						xspeed = Math.min(xspeed, 8);
# 						xspeed = Math.max(xspeed, -8);
# 						yspeed = -4;
# 						attackFrame = \"hurt\";
# 						HP -= 1;
# 						_root.Course.BackGFX[\"bombgfx\"+i].gotoAndStop(2);
# 					}
# 				}
# 			}
# 			if (this.feet.hitTest(_root.Course.BackGFX.falloff) || Math.abs(_x) > 1000  || _y > 1000) {
# 				gettingbackoncourse = true;
# 				idlecount = 0;
# 				idlecounts = 0;
# 				shockwave = true;
# 				//
# 				yspeed = -35;
# 				_y = 200;
# 				if (_x>0) {
# 					_xscale = 100;
# 					if (difficulty !== 2) {
# 						_x = 500;
# 						xspeed = -5;
# 					} else {
# 						_x = 300;
# 						xspeed = -3;
# 					}
# 				} else {
# 					_xscale = -100;
# 					if (difficulty !== 2) {
# 						_x = -500;
# 						xspeed = 5;
# 					} else {
# 						_x = -300;
# 						xspeed = 3;
# 					}
# 				}
# 				_root.bgsoundFX = new Sound(this);
# 				_root.bgsoundFX.attachSound(\"Bowser - Grab\");
# 				_root.bgsoundFX.start(0, 1);
# 				_root.bgsoundFX.setVolume(_root.BgVolume);
# 			}
# 			if (attackFrame == \"hurt\" && attack == true && air == false) {
# 				xspeed *= 0.9;
# 				attack = true;
# 				attackFrame = \"recover\";
# 			}
# 			//                                                                                                                          
# 			// ^ attacks ^                                                                            
# 			_y += yspeed;
# 			_x += xspeed;
# 			if (attack == true && attackFrame == \"spin\") {
# 				_root.Course.Platforms[\"BowserGround\"+depth]._y = _y+1000;
# 			} else {
# 				_root.Course.Platforms[\"BowserGround\"+depth]._y = _y;
# 			}
# 			_root.Course.Platforms[\"BowserGround\"+depth]._x = _x;
# 		} else {
# 			if (!isNaN(_root.Course.Platforms[\"BowserGround\"+depth]._y)) {
# 				_root.Course.Platforms[\"BowserGround\"+depth].removeMovieClip();
# 			}
# 		}
# 		if (attack == false) {
# 			clip.gotoAndStop(frame);
# 		} else {
# 			clip.gotoAndStop(attackFrame);
# 		}
# 	}
# };
# "

[node name="Bowser Code" type="Node2D"]
script = ExtResource("1_dkf85")
source_xml = "res://sm63/LIBRARY/Enemies/Bosses/Bowser/Clips/Bowser Code.xml"
linkage = ""
linkage_export = false
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_5bjg8")
}

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 1/Frame 0"]
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Enemies/Bosses/Bowser/Clips/Bowser Clip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 3" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 3"]

[node name="Frame 3" type="Node2D" parent="Layer 3"]
visible = false

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 3/Frame 3"]
position = Vector2(-10.5, -28.5)
scale = Vector2(0.442429, 0.265411)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 3/Frame 3/DOMSymbolInstance"]
script = SubResource("GDScript_6s6rs")

[node name="@DOMSymbolInstance@49077" type="Node2D" parent="Layer 3/Frame 3"]
position = Vector2(7.5, -21.6)
scale = Vector2(0.264938, 0.35405)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 3/Frame 3/@DOMSymbolInstance@49077"]
script = SubResource("GDScript_j74eg")

[node name="@DOMSymbolInstance@49078" type="Node2D" parent="Layer 3/Frame 3"]
position = Vector2(-12.5, 1.9)
scale = Vector2(0.264938, 0.672684)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 3/Frame 3/@DOMSymbolInstance@49078"]
script = SubResource("GDScript_iajy0")

[node name="@DOMSymbolInstance@49079" type="Node2D" parent="Layer 3/Frame 3"]
position = Vector2(6, -27.5)
scale = Vector2(0.442627, 0.265213)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 3/Frame 3/@DOMSymbolInstance@49079"]
script = SubResource("GDScript_euhi1")

[node name="@DOMSymbolInstance@49080" type="Node2D" parent="Layer 3/Frame 3"]
position = Vector2(1, 5)
scale = Vector2(0.531158, 0.353607)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 3/Frame 3/@DOMSymbolInstance@49080"]
script = SubResource("GDScript_slw6l")

[node name="@DOMSymbolInstance@49081" type="Node2D" parent="Layer 3/Frame 3"]
position = Vector2(27, 3)
scale = Vector2(0.371811, 0.406723)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 3/Frame 3/@DOMSymbolInstance@49081"]
script = SubResource("GDScript_d06de")

[node name="Layer 4" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 4"]

[node name="Frame 3" type="Node2D" parent="Layer 4"]
visible = false

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 4/Frame 3"]
position = Vector2(0, -2.55)
scale = Vector2(0.672165, 0.795166)
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="AS2" type="Node" parent="Layer 4/Frame 3/DOMSymbolInstance"]
script = SubResource("GDScript_jyeit")

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="AS2" type="Node" parent="Layer 2/Frame 0"]
script = SubResource("GDScript_x2bdk")

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 2/Frame 0"]
script = ExtResource("2_qd3b3")
path = "res://sm63_godot/Enemies/Bosses/Bowser/Clips/Bowser Ground Box.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.5
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Frame 1" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 1"]
script = SubResource("GDScript_m0q5a")

[node name="Frame 2" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 2"]
script = SubResource("GDScript_opbec")

[node name="Frame 3" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 3"]
script = SubResource("GDScript_re75a")
