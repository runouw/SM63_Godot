[gd_scene load_steps=7 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_513id"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_2d5nr"]

[sub_resource type="Animation" id="Animation_cet88"]
length = 0.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 2/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0666667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 2/Frame 2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Layer 1/Frame 0:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_awvl4"]
_data = {
"Default": SubResource("Animation_cet88")
}

[sub_resource type="GDScript" id="GDScript_d6oe5"]
script/source = "extends Node
# if (turncount == undefined) {
# 	turncount = 96;
# }
# if (idlespeed == undefined) {
# 	idlespeed = 2;
# }
# if (chasespeed == undefined) {
# 	chasespeed = 0.5;
# }
# if (hungry == undefined) {
# 	hungry = true;
# }
# if (scale == undefined) {
# 	scale = 1;
# }
# wide = 9;
# tall = 8;
# _xscale = scale*100;
# _yscale = scale*100;
# restartvars = function () {
# 	// 
# 	stopchasing = 0;
# 	chase = false;
# 	xspeed = 0;
# 	yspeed = 0;
# 	Direction = 1;
# 	count = random(96)+1;
# 	frame = \"swim\";
# 	clip.gotoAndStop(frame);
# 	clip.frame.gotoAndPlay(random(19)+1);
# };
# restartvars();
# saveY = _y;
# saveX = _x;
# //
# if (attached !== true) {
# 	if (_root.Course.coincountnum == undefined) {
# 		_root.Course.coincountnum = 0;
# 	} else {
# 		_root.Course.coincountnum++;
# 	}
# 	if (_root[\"coindata\"+_root.playingcourse][0] == undefined) {
# 		_root[\"coindata\"+_root.playingcourse] = [\"\"];
# 	}
# 	coinnum = _root.Course.coincountnum;
# 	if (_root[\"coindata\"+_root.playingcourse][coinnum] == 1 && _root[\"coindata\"+_root.playingcourse][coinnum] !== undefined) {
# 		//gotoAndStop(\"end\");
# 	}
# }
# //    
# HitTest = function (ground, X, Y) {
# 	if (_root.Course[ground].hitTest(((X)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((Y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		return (true);
# 	} else {
# 		return (false);
# 	}
# };
# "

[sub_resource type="GDScript" id="GDScript_b5i3y"]
script/source = "extends Node
# stop();
# onEnterFrame = function () {
# 	if ((_root.PauseGame == false && Math.abs((_root.currentCamX)-(_x+_parent._x))<600 && Math.abs((_root.currentCamY)-(_y+_parent._y))<600) || battleArena == true) {
# 		if (frame !== \"spin\" && frame !== \"gone\") {
# 			distance = Math.sqrt(Math.pow(_root.Course.Char._y-(_y+_parent._y), 2)+Math.pow(_root.Course.Char._x-(_x+_parent._x), 2));
# 			if (stopchasing>0) {
# 				stopchasing--;
# 			}
# 			if (HitTest(\"Water\", _x, _y)) {
# 				if (lastframewater == false) {
# 					frame = \"swim\";
# 				}
# 				lastframewater = true;
# 				if (chase == false) {
# 					_rotation *= 0.7;
# 					count++;
# 					if (count>turncount) {
# 						count = 0;
# 						frame = \"turn\";
# 						_xscale *= -1;
# 					}
# 					if (_xscale<0) {
# 						xspeed += (idlespeed-xspeed)/7;
# 					} else {
# 						xspeed += (-idlespeed-xspeed)/7;
# 					}
# 					if (distance<80*scale && hungry == true && stopchasing<=0 && _root.playpause == false) {
# 						chase = true;
# 					}
# 				} else {
# 					frame = \"chase\";
# 					rot = _root.radiansToAngle(Math.atan2((_root.Course.Char._y-(_y+_parent._y)), (_root.Course.Char._x-(_x+_parent._x))))-180;
# 					if (_root.Course.Char._x-(_x+_parent._x)>0) {
# 						if (_xscale>0) {
# 							_rotation += 180;
# 							_xscale *= -1;
# 						}
# 						rot += 180;
# 					} else {
# 						if (_xscale<0) {
# 							_rotation += 180;
# 							_xscale *= -1;
# 						}
# 					}
# 					while (rot>180) {
# 						rot -= 360;
# 					}
# 					while (rot<-180) {
# 						rot += 360;
# 					}
# 					rotspeed = -(_rotation-rot)/3;
# 					//rotspeed = Math.max(rotspeed, -3);
# 					//rotspeed = Math.min(rotspeed, 3);
# 					_rotation += rotspeed;
# 					if (_xscale>0) {
# 						xspeed -= Math.cos(_root.angleToRadians(_rotation))*chasespeed;
# 						yspeed -= Math.sin(_root.angleToRadians(_rotation))*chasespeed;
# 					} else {
# 						xspeed += Math.cos(_root.angleToRadians(_rotation))*chasespeed;
# 						yspeed += Math.sin(_root.angleToRadians(_rotation))*chasespeed;
# 					}
# 					if (distance>100*scale || _root.playpause == true || stopchasing>0 || _root.playpause == true) {
# 						chase = false;
# 						frame = \"swim\";
# 					}
# 				}
# 				xspeed *= 0.7;
# 				yspeed *= 0.7;
# 			} else {
# 				// out of water
# 				if (chase == true && lastframewater == true) {
# 					xspeed *= 2;
# 					_rotation = 0;
# 					yspeed = -11;
# 					frame = \"jump\";
# 				}
# 				lastframewater = false;
# 				yspeed += _root.gravity;
# 			}
# 			//
# 			mariowater = this.body.hitTest(_root.Course.Char.charClip.water) || this.body.hitTest(_root.Course.Char.charClip.frame.water);
# 			marioinvincible = ((_root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.attack == true && Math.abs(_root.Course.Char.xspeed)>0.3) || (Math.abs(_root.Course.Char.xspeed)>7 && _root.KeySPACE() && _root.Power>=100 && _root.WaterAmount>0 && _root.Fluddpow == \"T\"));
# 			if (this.body.hitTest(_root.Course.Char.charClip.body) && marioinvincible) {
# 				xspeed += _root.Course.Char.xspeed;
# 				yspeed += _root.Course.Char.yspeed-5;
# 				frame = \"spin\";
# 				spinspeed = Math.abs(_root.Course.Char.xspeed);
# 				spincount = 0;
# 			}
# 			// enemy hurt                           
# 			if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) && _root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				yspeed -= Math.abs((7)/5)/scale;
# 				xspeed += (((Math.random()*4-2)-(xspeed/1.5)))/scale;
# 				frame = \"spin\";
# 				spinspeed = Math.abs(_root.Course.Char.xspeed);
# 				spincount = 0;
# 			} else {
# 				if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					yspeed -= Math.abs((7)/5)/scale;
# 					xspeed += Math.max((((5)-(xspeed/1.5)))/scale, 0);
# 					frame = \"spin\";
# 					spinspeed = Math.abs(_root.Course.Char.xspeed);
# 					spincount = 0;
# 				}
# 				if (_root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					yspeed -= Math.abs((7)/5)/scale;
# 					xspeed += Math.min((((-5)-(xspeed/1.5)))/scale, 0);
# 					frame = \"spin\";
# 					spinspeed = Math.abs(_root.Course.Char.xspeed);
# 					spincount = 0;
# 				}
# 				if (mariowater) {
# 					frame = \"spin\";
# 					spinspeed = Math.abs(_root.Course.Char.xspeed);
# 					spincount = 0;
# 					//
# 					yspeed -= 1.5/scale;
# 					if (_root.Course.Char.attackFrame == \"Spin\" && _root.Course.Char.attack == true) {
# 						if (_root.Course.Char._x>_x+_parent._x) {
# 							xspeed *= 0.7;
# 							xspeed -= 20/scale;
# 						} else {
# 							xspeed *= 0.7;
# 							xspeed += 20/scale;
# 						}
# 					} else {
# 						if (_root.Course.Char._xscale>0) {
# 							if (_root.Fluddpow == \"T\" || (_root.Fluddpow == \"H\" && _root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.attack == true)) {
# 								xspeed *= 0.9;
# 								xspeed += 6/scale;
# 							} else {
# 								xspeed *= 0.9;
# 								xspeed -= 3/scale;
# 							}
# 						} else {
# 							if (_root.Fluddpow == \"T\" || (_root.Fluddpow == \"H\" && _root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.attack == true)) {
# 								xspeed *= 0.9;
# 								xspeed -= 6/scale;
# 							} else {
# 								xspeed *= 0.9;
# 								xspeed += 3/scale;
# 							}
# 						}
# 					}
# 				}
# 				if (this.body.hitTest(_root.Course.Char.charClip.body) && !marioinvincible && frame !== \"spin\" && frame !== \"gone\") {
# 					stopchasing = 32;
# 					if (_root.Course.Char._x>_x+_parent._x) {
# 						_root.MarioHit(1, 90, -5, 7, 7, \"\");
# 					} else {
# 						_root.MarioHit(1, 90, -5, -7, 7, \"\");
# 					}
# 				}
# 			}
# 		} else {
# 			if (frame == \"spin\") {
# 				//Spinning
# 				xspeed *= 0.85;
# 				yspeed *= 0.85;
# 				spincount++;
# 				clip.frame._rotation += spinspeed*6;
# 				if (spincount>16) {
# 					frame = \"gone\";
# 				}
# 			} else {
# 				// gone
# 				if ((Math.abs((_root.currentCamX)-(_x+_parent._x))>600 || Math.abs((_root.currentCamY)-(_y+_parent._y))>600) && (Math.abs((_root.currentCamX)-(saveX+_parent._x))>600 || Math.abs((_root.currentCamY)-(saveY+_parent._y))>600)) {
# 					_y = saveY;
# 					_x = saveX;
# 					//
# 					restartvars();
# 					//
# 				}
# 			}
# 		}
# 		//  
# 		if (HitTest(\"Platforms\", _x, _y+tall*scale)) {
# 			while (HitTest(\"Platforms\", _x, _y+tall*scale-1)) {
# 				_y--;
# 			}
# 			if (lastframewater == false) {
# 				yspeed = -4;
# 				xspeed *= -0.5;
# 				xspeed += Math.random()*4-2;
# 				if (frame !== \"gone\" && frame !== \"spin\") {
# 					frame = \"swim\";
# 				}
# 				if (xspeed<0 && _xscale<0) {
# 					_xscale *= -1;
# 				}
# 				if (xspeed>0 && _xscale>0) {
# 					_xscale *= -1;
# 				}
# 			} else {
# 				yspeed = -yspeed*0.7;
# 			}
# 		}
# 		if (HitTest(\"Platforms\", _x, _y-tall*scale)) {
# 			while (HitTest(\"Platforms\", _x, _y-tall*scale)) {
# 				_y++;
# 			}
# 			yspeed = -yspeed*0.7;
# 		}
# 		if (HitTest(\"Platforms\", _x+wide*scale, _y)) {
# 			while (HitTest(\"Platforms\", _x+wide*scale, _y)) {
# 				_x--;
# 			}
# 			xspeed = -xspeed*0.7;
# 		}
# 		if (HitTest(\"Platforms\", _x-wide*scale, _y)) {
# 			while (HitTest(\"Platforms\", _x-wide*scale, _y)) {
# 				_x++;
# 			}
# 			xspeed = -xspeed*0.7;
# 		}
# 		_x += xspeed;
# 		_y += yspeed;
# 		clip.gotoAndStop(frame);
# 	} else {
# 		if (frame == \"gone\") {
# 			if ((Math.abs((_root.currentCamX)-(_x+_parent._x))>600 || Math.abs((_root.currentCamY)-(_y+_parent._y))>600) && (Math.abs((_root.currentCamX)-(saveX+_parent._x))>600 || Math.abs((_root.currentCamY)-(saveY+_parent._y))>600)) {
# 				_y = saveY;
# 				_x = saveX;
# 				//
# 				restartvars();
# 				//
# 			}
# 		}
# 	}
# };
# "

[node name="Cheep Cheep Code" type="Node2D"]
script = ExtResource("1_513id")
source_xml = "res://sm63/LIBRARY/Enemies/Normal/A-F/Cheep Cheeps/Cheep Cheep Code.xml"
linkage = "CheepCheepCode"
linkage_export = true
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_awvl4")
}

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 1/Frame 0"]
script = ExtResource("2_2d5nr")
path = "res://sm63_godot/Enemies/Normal/A-F/Cheep Cheeps/Cheep Cheep Clip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="AS2" type="Node" parent="Layer 2/Frame 0"]
script = SubResource("GDScript_d6oe5")

[node name="Frame 2" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 2"]
script = SubResource("GDScript_b5i3y")

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 2/Frame 2"]
position = Vector2(0, 7.4)
scale = Vector2(0.265381, 0.265076)
script = ExtResource("2_2d5nr")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0
