[gd_scene load_steps=7 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_avt2l"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_4744k"]

[sub_resource type="Animation" id="Animation_m1gow"]
length = 0.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 2/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0666667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 2/Frame 2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Layer 1/Frame 0:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_f58aq"]
_data = {
"Default": SubResource("Animation_m1gow")
}

[sub_resource type="GDScript" id="GDScript_ofhk4"]
script/source = "extends Node
# if (frame == undefined) {
# 	frame = \"flying\";
# 	// frame = \"run\"
# }
# if (frame == \"run\") {
# 	blink = 0;
# 	if (xspeed == undefined) {
# 		xspeed = 0;
# 	}
# 	if (yspeed == undefined) {
# 		yspeed = 0;
# 	}
# }
# if (flyxspeed == undefined) {
# 	flyxspeed = 1.5+Math.random()*0.5;
# }
# if (flyyspeed == undefined) {
# 	flyyspeed = -0.1-Math.random()*0.2;
# }
# if (runspeed == undefined) {
# 	runspeed = 2+Math.random()*1.5;
# }
# air = true;
# if (frame == \"flying\") {
# 	clip.clip.gotoAndPlay(random(18)+1);
# }
# wide = 10;
# tall = 7;
# //
# saveX = _x;
# saveY = _y;
# saveframe = frame;
# restartvars = function () {
# 	_x = saveX;
# 	_y = saveY;
# 	frame = saveframe;
# 	air = true;
# 	blink = 0;
# };
# "

[sub_resource type="GDScript" id="GDScript_pjx4q"]
script/source = "extends Node
# stop();
# onEnterFrame = function () {
# 	if (_root.PauseGame == false) {
# 		if (Math.abs((_root.currentCamX)-(_x+_parent._x))<1000 && Math.abs((_root.currentCamY)-(_y+_parent._y))<1000 && frame !== \"gone\") {
# 			if (frame == \"flying\") {
# 				xspeed = flyxspeed;
# 				yspeed = flyyspeed;
# 				//
# 				if (this.head.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.yspeed>0) {
# 					_root.Course.Char.yspeed /= 2.5;
# 					_root.Course.Char.yspeed -= 12;
# 					for (i=0; i<8; i++) {
# 						_root.Course.BackGFX.attachMovie(\"SkeletonGoonieBone\", \"SkeletonGoonieBone\"+_root.Course.BackGFX.getNextHighestDepth(), _root.Course.BackGFX.getNextHighestDepth(), {_x:_x, _y:_y});
# 					}
# 					frame = \"run\";
# 					blink = 10;
# 					//
# 					_root.bgsoundFX = new Sound(this);
# 					_root.bgsoundFX.attachSound(\"flippers\");
# 					_root.bgsoundFX.start(0, 1);
# 					_root.bgsoundFX.setVolume(_root.BgVolume);
# 				}
# 				if (this.body.hitTest(_root.Course.Char.charClip.water) || this.body.hitTest(_root.Course.Char.charClip.frame.water)) {
# 					for (i=0; i<8; i++) {
# 						_root.Course.BackGFX.attachMovie(\"SkeletonGoonieBone\", \"SkeletonGoonieBone\"+_root.Course.BackGFX.getNextHighestDepth(), _root.Course.BackGFX.getNextHighestDepth(), {_x:_x, _y:_y});
# 					}
# 					frame = \"run\";
# 					blink = 10;
# 					yspeed = -4;
# 					if (_root.Course.Char._x>_x+_parent._x) {
# 						xspeed = 4;
# 					} else {
# 						xspeed = -4;
# 					}
# 				}
# 				if (this.body.hitTest(_root.Course.Char.charClip.body)) {
# 					if (_root.Course.Char._x>_x+_parent._x) {
# 						_root.MarioHit(1, 90, -3, 5, 7, \"\");
# 					} else {
# 						_root.MarioHit(1, 90, -3, -5, 7, \"\");
# 					}
# 				}
# 				//                        
# 				// enemy hurt  
# 				if (frame == \"flying\" || frame == \"run\") {
# 					if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) && _root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 						yspeed = -4;
# 						xspeed = 0;
# 						for (i=0; i<8; i++) {
# 							_root.Course.BackGFX.attachMovie(\"SkeletonGoonieBone\", \"SkeletonGoonieBone\"+_root.Course.BackGFX.getNextHighestDepth(), _root.Course.BackGFX.getNextHighestDepth(), {_x:_x, _y:_y});
# 						}
# 						frame = \"run\";
# 						blink = 10;
# 					} else {
# 						if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 							yspeed = -4;
# 							xspeed = 4;
# 							for (i=0; i<8; i++) {
# 								_root.Course.BackGFX.attachMovie(\"SkeletonGoonieBone\", \"SkeletonGoonieBone\"+_root.Course.BackGFX.getNextHighestDepth(), _root.Course.BackGFX.getNextHighestDepth(), {_x:_x, _y:_y});
# 							}
# 							frame = \"run\";
# 							blink = 10;
# 						}
# 						if (_root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 							yspeed = -4;
# 							xspeed = -4;
# 							for (i=0; i<8; i++) {
# 								_root.Course.BackGFX.attachMovie(\"SkeletonGoonieBone\", \"SkeletonGoonieBone\"+_root.Course.BackGFX.getNextHighestDepth(), _root.Course.BackGFX.getNextHighestDepth(), {_x:_x, _y:_y});
# 							}
# 							frame = \"run\";
# 							blink = 10;
# 						}
# 					}
# 				}
# 				//                                                     
# 			} else {
# 				// frame == \"run\"
# 				if (blink>0) {
# 					blink--;
# 				}
# 				//                          
# 				if (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					air = false;
# 					yspeed = 0;
# 					if (blink>=0) {
# 						xspeed = runspeed;
# 					}
# 				} else {
# 					air = true;
# 					if (blink>=0) {
# 						yspeed += _root.gravity;
# 					}
# 				}
# 				//
# 				while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					air = false;
# 					_y--;
# 				}
# 				// walls            
# 				while (_root.Course.Platforms.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					_x--;
# 					_xscale = 100;
# 				}
# 				while (_root.Course.Platforms.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					_x++;
# 					_xscale = -100;
# 				}
# 				// ^ walls ^
# 				while ((_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) && !(_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true))) {
# 					_y++;
# 				}
# 				while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					_y--;
# 				}
# 				// 
# 				if (blink<=0) {
# 					if (this.body.hitTest(_root.Course.Char.charClip.water) || this.body.hitTest(_root.Course.Char.charClip.frame.water)) {
# 						for (i=0; i<8; i++) {
# 							_root.Course.BackGFX.attachMovie(\"SkeletonGoonieBone\", \"SkeletonGoonieBone\"+_root.Course.BackGFX.getNextHighestDepth(), _root.Course.BackGFX.getNextHighestDepth(), {_x:_x, _y:_y});
# 						}
# 						frame = \"run\";
# 					}
# 					if (this.head.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.air == true && _root.Course.Char.yspeed>0) {
# 						_root.Course.Char.yspeed /= 2.5;
# 						_root.Course.Char.yspeed -= 9;
# 						frame = \"gone\";
# 						//
# 						_root.bgsoundFX = new Sound(this);
# 						_root.bgsoundFX.attachSound(\"flippers\");
# 						_root.bgsoundFX.start(0, 1);
# 						_root.bgsoundFX.setVolume(_root.BgVolume);
# 					}
# 					if (this.body.hitTest(_root.Course.Char.charClip.body)) {
# 						blink = 7;
# 						if (_root.Course.Char._x>_x+_parent._x) {
# 							_root.MarioHit(1, 90, -2, 4, 7, \"\");
# 						} else {
# 							_root.MarioHit(1, 90, -2, -4, 7, \"\");
# 						}
# 					}
# 					//                     
# 					// enemy hurt
# 					if (frame == \"flying\" || frame == \"run\") {
# 						if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) && _root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 							frame = \"gone\";
# 						} else {
# 							if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 								frame = \"gone\";
# 							}
# 							if (_root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 								frame = \"gone\";
# 							}
# 						}
# 					}
# 					//                  
# 				}
# 			}
# 			if (_root.Course.Lava.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				frame = \"gone\";
# 			}
# 			//           
# 			bounds = _root.Course.CamEdge.getBounds(_root.Course.CamEdge);
# 			coursewidth = bounds.xMax-bounds.xMin;
# 			courseheight = bounds.yMax-bounds.yMin;
# 			//
# 			if (_x>bounds.xMax+5) {
# 				_x -= coursewidth;
# 			}
# 			if (_x<bounds.xMin-5) {
# 				_x += coursewidth;
# 			}
# 			if (_y>bounds.yMax+5) {
# 				_y -= courseheight;
# 			}
# 			if (_y<bounds.yMin-5) {
# 				_y += courseheight;
# 			}
# 			//           
# 			_x += xspeed*-_xscale/100;
# 			_y += yspeed;
# 			clip.gotoAndStop(frame);
# 		} else {
# 			if ((Math.abs((_root.currentCamX)-(_x+_parent._x))>1000 || Math.abs((_root.currentCamY)-(_y+_parent._y))>1000) && (Math.abs((_root.currentCamX)-(saveX+_parent._x))>1000 || Math.abs((_root.currentCamY)-(saveY+_parent._y))>1000)) {
# 				restartvars();
# 				//
# 			}
# 		}
# 	}
# };
# "

[node name="Skeleton Goonie Code" type="Node2D"]
script = ExtResource("1_avt2l")
source_xml = "res://sm63/LIBRARY/Enemies/Normal/G-Z/Skelegoon/Skeleton Goonie Code.xml"
linkage = "SkeletonGoonieCode"
linkage_export = true
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_f58aq")
}

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 1/Frame 0"]
script = ExtResource("2_4744k")
path = "res://sm63_godot/Enemies/Normal/G-Z/Skelegoon/Skeleton Goonie Clip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="AS2" type="Node" parent="Layer 2/Frame 0"]
script = SubResource("GDScript_ofhk4")

[node name="Frame 2" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 2"]
script = SubResource("GDScript_pjx4q")

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 2/Frame 2"]
position = Vector2(-2, -6.5)
scale = Vector2(0.265381, 0.141602)
script = ExtResource("2_4744k")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="@DOMSymbolInstance@50750" type="Node2D" parent="Layer 2/Frame 2"]
position = Vector2(-2, 4.5)
scale = Vector2(0.265381, 0.141602)
script = ExtResource("2_4744k")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0
