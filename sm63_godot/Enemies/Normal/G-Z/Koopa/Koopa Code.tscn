[gd_scene load_steps=8 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_yla0l"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_dxnhm"]

[sub_resource type="Animation" id="Animation_21kkm"]
length = 0.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Code/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0666667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Code/Frame 2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Code 2/Frame 0:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.0666667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Code 2/Frame 2:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Graphics/Frame 0:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hctr3"]
_data = {
"Default": SubResource("Animation_21kkm")
}

[sub_resource type="GDScript" id="GDScript_328i7"]
script/source = "extends Node
# Moveright = function () {
# 	offground = true;
# 	if (offground == false) {
# 		break;
# 	}
# 	for (Xspot2=15; Xspot2<40; Xspot2 += 10) {
# 		Xspot = Xspot2+(xspeed*7);
# 		adding = 3;
# 		for (Yspot=-5; Yspot<30; Yspot += adding += 0.5) {
# 			adding = Math.min(adding, 5);
# 			if (!_root.Course.Lava.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				if (_root.Course.Platforms.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					offground = false;
# 					break;
# 				}
# 				if (_root.Course.BPlatforms.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					offground = false;
# 					break;
# 				}
# 				if (underwater == false) {
# 					if (_root.Course.Water.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 						offground = true;
# 						break;
# 					}
# 				}
# 				if (_root.Course.Lava.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					offground = true;
# 					break;
# 				}
# 			}
# 		}
# 	}
# 	if (offground == false) {
# 		if (frame !== \"Turn\") {
# 			xspeed += (walkspeed-xspeed)/5;
# 		}
# 	} else {
# 		randomnum = 0;
# 		if (air == false && frame !== \"Shell\") {
# 			frame = \"Turn\";
# 		}
# 	}
# };
# Moveleft = function () {
# 	offground = true;
# 	if (offground == false) {
# 		break;
# 	}
# 	for (Xspot2=15; Xspot2<40; Xspot2 += 10) {
# 		Xspot = -Xspot2+(xspeed*7);
# 		adding = 3;
# 		for (Yspot=-5; Yspot<30; Yspot += adding += 0.5) {
# 			adding = Math.min(adding, 5);
# 			if (!_root.Course.Lava.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				if (_root.Course.Platforms.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					offground = false;
# 					break;
# 				}
# 				if (_root.Course.BPlatforms.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					offground = false;
# 					break;
# 				}
# 				if (underwater == false) {
# 					if (_root.Course.Water.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 						offground = true;
# 						break;
# 					}
# 				}
# 				if (_root.Course.Lava.hitTest(((_x+Xspot)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+Yspot)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					offground = true;
# 					break;
# 				}
# 			}
# 		}
# 	}
# 	if (offground == false) {
# 		if (frame !== \"Turn\") {
# 			xspeed += (-walkspeed-xspeed)/5;
# 		}
# 	} else {
# 		randomnum = 0;
# 		if (air == false && frame !== \"Shell\") {
# 			frame = \"Turn\";
# 		}
# 	}
# };
# "

[sub_resource type="GDScript" id="GDScript_r5pxs"]
script/source = "extends Node
# if (scale == undefined) {
# 	scale = 1;
# }
# if (State == undefined) {
# 	State = \"Walk\";
# }
# savestate = State;
# if (walkspeed == undefined) {
# 	walkspeed = 3;
# }
# if (frame == undefined) {
# 	frame = \"Walk\";
# }
# if (movedirection == undefined) {
# 	randomnum = random(2);
# 	if (randomnum == 0) {
# 		movedirection = \"right\";
# 	} else {
# 		movedirection = \"left\";
# 	}
# } else {
# 	randomnum = 0;
# }
# if (WalkDistance == undefined) {
# 	WalkDistance = 100;
# }
# if (shellspeed == undefined) {
# 	shellspeed = 10;
# }
# if (underwater == undefined) {
# 	underwater = false;
# }
# restartvars = function () {
# 	State = savestate;
# 	//
# 	frame = \"Idle\";
# 	xspeed = 0;
# 	yspeed = 0;
# 	wide = 7*scale;
# 	tall = 25*scale;
# 	air = false;
# 	_xscale = scale*100;
# 	_yscale = scale*100;
# };
# restartvars();
# //
# saveY = _y;
# saveX = _x;
# //
# "

[sub_resource type="GDScript" id="GDScript_oqoxl"]
script/source = "extends Node
# stop();
# onEnterFrame = function () {
# 	if (_root.PauseGame == false && _root.playpause == false && Math.abs((_root.currentCamX)-(_x+_parent._x))<600 && Math.abs((_root.currentCamY)-(_y+_parent._y))<600) {
# 		_yscale = scale*100;
# 		if (movedirection == \"left\") {
# 			_xscale = scale*100;
# 		} else {
# 			_xscale = -scale*100;
# 		}
# 		if (State == \"Flying\") {
# 			// move up and down code
# 		}
# 		if (State == \"Walk\") {
# 			if (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				if (movedirection == \"right\") {
# 					Moveright();
# 				} else {
# 					Moveleft();
# 				}
# 				if (frame == \"Turn\") {
# 					//xspeed = _root.groundFriction(xspeed, 0.5, 1.1);
# 					if (movedirection == \"right\") {
# 						xspeed = -12/14;
# 					} else {
# 						xspeed = 12/14;
# 					}
# 				} else {
# 					randomnum++;
# 				}
# 				if (randomnum>WalkDistance) {
# 					frame = \"Turn\";
# 					randomnum = 0;
# 				}
# 				xspeed *= 0.95;
# 			}
# 		}
# 		if (State == \"Shell\") {
# 			xspeed *= 0.99;
# 		}
# 		//                                                                                        
# 		mariowater = this.body.hitTest(_root.Course.Char.charClip.water) || this.body.hitTest(_root.Course.Char.charClip.frame.water) || this.head.hitTest(_root.Course.Char.charClip.water);
# 		marioinvincible = ((_root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.attack == true && Math.abs(_root.Course.Char.xspeed)>0.3) || (Math.abs(_root.Course.Char.xspeed)>7 && _root.KeySPACE() && _root.Power>=100 && _root.WaterAmount>0 && _root.Fluddpow == \"T\"));
# 		//                   
# 		//                                                  
# 		if (State == \"Flying\" && this.body.hitTest(_root.Course.Char.charClip.body) && marioinvincible) {
# 			xspeed += _root.Course.Char.xspeed/1.5;
# 			yspeed += _root.Course.Char.yspeed/1.5;
# 			State = \"Shell\";
# 		}
# 		if (State == \"Walk\" && this.body.hitTest(_root.Course.Char.charClip.body) && marioinvincible) {
# 			xspeed += _root.Course.Char.xspeed/1.5;
# 			yspeed -= 5;
# 			_y -= 5;
# 			State = \"Shell\";
# 		}
# 		if (State == \"Shell\" && this.body.hitTest(_root.Course.Char.charClip.body) && marioinvincible) {
# 			if (_root.Course.Char._x>_x+_parent._x) {
# 				xspeed += _root.Course.Char.yspeed/2;
# 			} else {
# 				xspeed -= _root.Course.Char.yspeed/2;
# 			}
# 			xspeed += _root.Course.Char.xspeed/1.5;
# 		}
# 		//                                                                                    
# 		if ((State == \"Flying\" || State == \"Walk\" || State == \"Shell\") && mariowater) {
# 			State = \"Shell\";
# 			//
# 			yspeed -= 1.5/scale;
# 			if (_root.Course.Char.attackFrame == \"Spin\" && _root.Course.Char.attack == true) {
# 				if (_root.Course.Char._x>_x+_parent._x) {
# 					xspeed *= 0.7;
# 					xspeed -= 20/scale;
# 				} else {
# 					xspeed *= 0.7;
# 					xspeed += 20/scale;
# 				}
# 			} else {
# 				if (_root.Course.Char._xscale>0) {
# 					if (_root.Fluddpow == \"T\" || (_root.Fluddpow == \"H\" && _root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.attack == true)) {
# 						xspeed *= 0.9;
# 						xspeed += 6/scale;
# 					} else {
# 						xspeed *= 0.9;
# 						xspeed -= 3/scale;
# 					}
# 				} else {
# 					if (_root.Fluddpow == \"T\" || (_root.Fluddpow == \"H\" && _root.Course.Char.attackFrame == \"Dive\" && _root.Course.Char.attack == true)) {
# 						xspeed *= 0.9;
# 						xspeed -= 6/scale;
# 					} else {
# 						xspeed *= 0.9;
# 						xspeed += 3/scale;
# 					}
# 				}
# 			}
# 		}
# 		//                                          
# 		if (State == \"Flying\" && this.head.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.air == true && _root.Course.Char.yspeed>0) {
# 			_root.Course.Char.yspeed /= 2;
# 			_root.Course.Char.yspeed -= 15;
# 			State = \"Walk\";
# 			//
# 			_root.bgsoundFX = new Sound(this);
# 			_root.bgsoundFX.attachSound(\"flippers\");
# 			_root.bgsoundFX.start(0, 1);
# 			_root.bgsoundFX.setVolume(_root.BgVolume);
# 		}
# 		if (State == \"Walk\" && this.head.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.air == true && _root.Course.Char.yspeed>0) {
# 			_root.Course.Char.yspeed /= 2;
# 			_root.Course.Char.yspeed -= 12;
# 			xspeed = 0;
# 			State = \"Shell\";
# 			//
# 			_root.bgsoundFX = new Sound(this);
# 			_root.bgsoundFX.attachSound(\"flippers\");
# 			_root.bgsoundFX.start(0, 1);
# 			_root.bgsoundFX.setVolume(_root.BgVolume);
# 		}
# 		if (State == \"Shell\" && this.body.hitTest(_root.Course.Char.charClip.feet) && _root.Course.Char.air == true && _root.Course.Char.yspeed>0) {
# 			if (air == true) {
# 				yspeed += (_root.Course.Char.yspeed-yspeed)*0.5;
# 			}
# 			_root.Course.Char.yspeed /= 4;
# 			_root.Course.Char.yspeed -= 12;
# 			if (_root.Course.Char._x>_x+_parent._x) {
# 				xspeed += _root.Course.Char.yspeed/1.5;
# 			} else {
# 				xspeed -= _root.Course.Char.yspeed/1.5;
# 			}
# 			xspeed += _root.Course.Char.xspeed/2;
# 			//
# 			_root.bgsoundFX = new Sound(this);
# 			_root.bgsoundFX.attachSound(\"flippers\");
# 			_root.bgsoundFX.start(0, 1);
# 			_root.bgsoundFX.setVolume(_root.BgVolume);
# 		}
# 		//                                                                                            
# 		if (State == \"Flying\" && this.body.hitTest(_root.Course.Char.charClip.body) && !marioinvincible) {
# 			if (_root.Course.Char._x>_x+_parent._x) {
# 				_root.MarioHit(1, 90, -5, 7, 7, \"\");
# 			} else {
# 				_root.MarioHit(1, 90, -5, -7, 7, \"\");
# 			}
# 		}
# 		if (State == \"Walk\" && this.body.hitTest(_root.Course.Char.charClip.body) && _root.Course.Char.frame !== \"\" && !marioinvincible) {
# 			if (_root.Course.Char._x>_x+_parent._x) {
# 				_root.MarioHit(1, 90, -5, 7, 7, \"\");
# 			} else {
# 				_root.MarioHit(1, 90, -5, -7, 7, \"\");
# 			}
# 		}
# 		if (State == \"Shell\" && ((this.body.hitTest(_root.Course.Char.charClip.body) && _root.Course.Char.air == false) || (this.body.hitTest(_root.Course.Char.charClip.head) && _root.Course.Char.air == true)) && !marioinvincible) {
# 			xspeed += (_root.Course.Char.xspeed-xspeed)/2;
# 			if (_root.Course.Char._x>_x+_parent._x) {
# 				xspeed -= 3;
# 				if (Math.abs(xspeed)>2) {
# 					//_root.MarioHit(1, 90, -5, 7, 7, \"\");
# 				}
# 			} else {
# 				xspeed += 3;
# 				if (Math.abs(xspeed)>2) {
# 					//_root.MarioHit(1, 90, -5, -7, 7, \"\");
# 				}
# 			}
# 		}
# 		//                                                                        
# 		// enemy hurt  
# 		if (State == \"Flying\" || State == \"Walk\") {
# 			if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) && _root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				yspeed -= Math.abs((7)/5)/scale;
# 				xspeed += (((Math.random()*4-2)-(xspeed/1.5)))/scale;
# 				_y -= 3;
# 				State = \"Shell\";
# 			} else {
# 				if (_root.Course.Enemyhurt.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					yspeed -= Math.abs((7)/5)/scale;
# 					xspeed += Math.max((((5)-(xspeed/1.5)))/scale, 0);
# 					_y -= 3;
# 					State = \"Shell\";
# 				}
# 				if (_root.Course.Enemyhurt.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					yspeed -= Math.abs((7)/5)/scale;
# 					xspeed += Math.min((((-5)-(xspeed/1.5)))/scale, 0);
# 					_y -= 3;
# 					State = \"Shell\";
# 				}
# 			}
# 		}
# 		//                                         
# 		if (State == \"Walk\" && _root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 			if (underwater == false) {
# 				State = \"Shell\";
# 			} else {
# 				xspeed *= 0.9;
# 			}
# 		}
# 		if (State == \"Shell\") {
# 			count = 0;
# 			while (_root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-count)+5)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				count++;
# 				if (count>7) {
# 					break;
# 				}
# 			}
# 			//  
# 			if (_root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-count)+5)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				if (!_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-8)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					yspeed *= 0.9;
# 					yspeed -= count/7;
# 				}
# 				if (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 					_y -= 5;
# 				}
# 				xspeed *= 0.85;
# 			}
# 		}
# 		//                                                                                                                                             
# 		if (State == \"Walk\" || State == \"Shell\") {
# 			if (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				yspeed = 0;
# 			} else {
# 				yspeed += _root.gravity;
# 				if (yspeed>7) {
# 					yspeed *= 0.9;
# 				}
# 			}
# 		}
# 		while (_root.Course.Platforms.hitTest(((_x+wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 			_x--;
# 			if (State == \"Walk\") {
# 				if (movedirection == \"right\") {
# 					frame = \"Turn\";
# 				}
# 			}
# 			if (State == \"Shell\") {
# 				xspeed = Math.min(-xspeed*0.7, xspeed);
# 			}
# 		}
# 		while (_root.Course.Platforms.hitTest(((_x-wide)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-(tall/2)))*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 			_x++;
# 			if (State == \"Walk\") {
# 				if (movedirection == \"left\") {
# 					frame = \"Turn\";
# 				}
# 			}
# 			if (State == \"Shell\") {
# 				xspeed = Math.max(-xspeed*0.7, xspeed);
# 			}
# 		}
# 		if (State !== \"Flying\") {
# 			while ((_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) && !(_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true))) {
# 				_y++;
# 			}
# 		}
# 		while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) || _root.Course.BPlatforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-1)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 			_y--;
# 		}
# 		if (State !== \"Shell\") {
# 			while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-30)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				_y++;
# 			}
# 		} else {
# 			while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-20)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 				_y++;
# 			}
# 		}
# 		if (_root.Course.Lava.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 			frame = \"Shell\";
# 			State = \"Shell\";
# 		}
# 		if (_root.Course.Lava.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 			yspeed -= 0.1;
# 			yspeed *= 0.8;
# 			yspeed -= _root.gravity;
# 			if (air == false) {
# 				_y-3;
# 			}
# 		}
# 		if (State == \"Flying\") {
# 			frame = \"Flying\";
# 		}
# 		if (State == \"Walk\" && frame !== \"Turn\") {
# 			frame = \"Walk\";
# 		}
# 		if (State == \"Shell\") {
# 			frame = \"Shell\";
# 			//
# 			if (Math.abs(xspeed)>1) {
# 				_root.Course.Enemyhurt.attachMovie(\"EnemyHurtBox\", \"Box\"+_root.Course.Enemyhurt.getNextHighestDepth(), _root.Course.Enemyhurt.getNextHighestDepth(), {_x:_x, _y:_y-7, _yscale:15, _xscale:15, time:1});
# 			}
# 		}
# 		//                                                                   
# 		xspeed = Math.max(xspeed, -12);
# 		xspeed = Math.min(xspeed, 12);
# 		_y += yspeed;
# 		_x += xspeed;
# 		clip.gotoAndStop(frame);
# 	}
# 	if ((Math.abs((_root.currentCamX)-(_x+_parent._x))>600 || Math.abs((_root.currentCamY)-(_y+_parent._y))>600) && (Math.abs((_root.currentCamX)-(saveX+_parent._x))>600 || Math.abs((_root.currentCamY)-(saveY+_parent._y))>600)) {
# 		_y = saveY;
# 		_x = saveX;
# 		//
# 		restartvars();
# 		//
# 	}
# };
# "

[node name="Koopa Code" type="Node2D"]
script = ExtResource("1_yla0l")
source_xml = "res://sm63/LIBRARY/Enemies/Normal/G-Z/Koopa/Koopa Code.xml"
linkage = "KoopaCode"
linkage_export = true
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_hctr3")
}

[node name="Graphics" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Graphics"]

[node name="DOMSymbolInstance" type="Node2D" parent="Graphics/Frame 0"]
position = Vector2(0, -14)
script = ExtResource("2_dxnhm")
path = "res://sm63_godot/Enemies/Normal/G-Z/Koopa/Koopa Frames.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Code 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Code 2"]

[node name="AS2" type="Node" parent="Code 2/Frame 0"]
script = SubResource("GDScript_328i7")

[node name="Frame 2" type="Node2D" parent="Code 2"]
visible = false

[node name="DOMSymbolInstance" type="Node2D" parent="Code 2/Frame 2"]
position = Vector2(1, 6.4)
scale = Vector2(0.265381, 0.265076)
script = ExtResource("2_dxnhm")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="@DOMSymbolInstance@50686" type="Node2D" parent="Code 2/Frame 2"]
position = Vector2(-1, -17)
scale = Vector2(0.265381, 0.141602)
script = ExtResource("2_dxnhm")
path = "res://sm63_godot/Xtra/Lineless Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Code" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Code"]

[node name="AS2" type="Node" parent="Code/Frame 0"]
script = SubResource("GDScript_r5pxs")

[node name="Frame 2" type="Node2D" parent="Code"]
visible = false

[node name="AS2" type="Node" parent="Code/Frame 2"]
script = SubResource("GDScript_oqoxl")
