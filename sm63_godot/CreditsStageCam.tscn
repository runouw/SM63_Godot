[gd_scene load_steps=6 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_r3h56"]
[ext_resource type="Script" path="res://xfl_parse/gradient/linear_gradient.gd" id="2_ch08a"]

[sub_resource type="Animation" id="Animation_rk3ra"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 1/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("color/Frame 0:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("viewfinder/Frame 0:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("frame/Frame 0:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_s0fv0"]
_data = {
"Default": SubResource("Animation_rk3ra")
}

[sub_resource type="GDScript" id="GDScript_d4ufd"]
script/source = "extends Node
# function camControl():Void {
# 	parentColor1.setTransform(camColor.getTransform());
# 	parentColor2.setTransform(camColor.getTransform());
# 	parentColor3.setTransform(camColor.getTransform());
# 	parentColor4.setTransform(camColor.getTransform());
# 	parentColor5.setTransform(camColor.getTransform());
# 	var scaleX:Number = sX/((Width/100)*_xscale);
# 	var scaleY:Number = sY/((Height/100)*_yscale);
# 	if (_root.CreditsCamFirstFrame < 2) {
# 		_root.CreditsCourseX = -this._x;
# 		_root.CreditsCourseY = -this._y;
# 		_root.CreditsCourseScaleX = 100*scaleX;
# 		_root.CreditsCourseScaleY = 100*scaleY;
# 	} else {
# 		_root.CreditsCourseX += (-this._x-_root.CreditsCourseX)/5;
# 		_root.CreditsCourseY += (-this._y-_root.CreditsCourseY)/5;
# 		_root.CreditsCourseScaleX += (100*scaleX-_root.CreditsCourseScaleX)/5;
# 		_root.CreditsCourseScaleY += (100*scaleY-_root.CreditsCourseScaleY)/5;
# 	}
# 	_root.CreditsCamFirstFrame++;
# 	//
# 	_root.CreditsCourseRot = -this._rotation;
# 	//
# }
# /*
# function resetStage():Void {
# var resetTrans:Object = {ra:100, rb:0, ga:100, gb:0, ba:100, bb:0, aa:100, ab:0};
# parentColor1.setTransform(resetTrans);
# parentColor2.setTransform(resetTrans);
# parentColor3.setTransform(resetTrans);
# _parent._parent.Course._xscale = 100;
# _parent._parent.Course._yscale = 100;
# _parent._parent.Course._x = 0;
# _parent._parent.Course._y = 0;
# _parent._parent.BG._x = 0;
# _parent._parent.BG._y = 0;
# _parent._parent.BG._xscale = 100;
# _parent._parent.BG._yscale = 100;
# _root.QuakeX = 0;
# _root.QuakeY = 0;
# _root.BGSpeed = undefined;
# }
# */
# // make frame invisible
# this._visible = false;
# // Capture stage parameters
# var oldMode:String = Stage.scaleMode;
# //Stage.scaleMode = \"exactFit\";
# var cX:Number = Stage.width/2;
# var cY:Number = Stage.height/2;
# var sX:Number = Stage.width;
# var sY:Number = Stage.height;
# var Width:Number = 720;
# var Height:Number = 480;
# //Stage.scaleMode = oldMode;
# // create color instances for color 
# // transforms (if any).
# var camColor:Color = new Color(this);
# var parentColor1:Color = new Color(_root.FarBackground);
# var parentColor2:Color = new Color(_root.Course);
# var parentColor3:Color = new Color(_root.BGCourse);
# var parentColor4:Color = new Color(_root.MidBackground);
# var parentColor5:Color = new Color(_root.BGCloseCourse);
# // Make the stage move so that the 
# // v-cam is centered on the
# // viewport every frame
# _root.CreditsCamFirstFrame = 0;
# this.onEnterFrame = camControl;
# // Make an explicit call to the camControl
# // function to make sure it also runs on the
# // first frame.
# camControl();
# // If the v-cam is ever removed (unloaded)
# // the stage, return the stage to the default
# // settings.
# //this.onUnload = resetStage;
# "

[node name="CreditsStageCam" type="Node2D"]
script = ExtResource("1_r3h56")
source_xml = "res://sm63/LIBRARY/CreditsStageCam.xml"
linkage = ""
linkage_export = false
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_s0fv0")
}

[node name="frame" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="frame"]

[node name="Shape" type="Node2D" parent="frame/Frame 0"]

[node name="@@6113" type="Polygon2D" parent="frame/Frame 0/Shape"]
color = Color(1, 1, 1, 0.2)
polygon = PackedVector2Array(-360, -240, 360, -240, 360, 240, -360, 240)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6114" type="Line2D" parent="frame/Frame 0/Shape"]
points = PackedVector2Array(360, 240, -360, 240, nan, nan, -360, -240, -360, 240, nan, nan, -360, -240, 360, -240, nan, nan, 360, -240, 360, 240, nan, nan)
width = 1.0
default_color = Color(0, 0, 0, 1)
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2

[node name="viewfinder" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="viewfinder"]

[node name="Shape" type="Node2D" parent="viewfinder/Frame 0"]

[node name="@@6110" type="Polygon2D" parent="viewfinder/Frame 0/Shape"]
color = Color(1, 1, 1, 0.0627451)
polygon = PackedVector2Array(0, -25.7, 0.1, -25.7, 9.975, -23.825, 18.3, -18.2, 23.9625, -9.875, 25.85, 0, 23.9625, 9.8375, 18.3, 18.15, 9.975, 23.8125, 0.1, 25.7, 0, 25.7, -9.78008, 23.7947, -18.05, 18.15, -23.7034, 9.84639, -25.6, 0, -25.6, -0.05, -23.7125, -9.8875, -18.05, -18.2, -9.78008, -23.8071, -9.68774, -23.825)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19)])

[node name="@@6111" type="Line2D" parent="viewfinder/Frame 0/Shape"]
points = PackedVector2Array(0, -34.25, 0, -25.7, nan, nan)
width = 1.0
default_color = Color(0, 0, 0, 1)
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2

[node name="@@6112" type="Line2D" parent="viewfinder/Frame 0/Shape"]
points = PackedVector2Array(0, -25.7, 0.1, -25.7, nan, nan, 0.1, -25.7, 9.975, -23.825, nan, nan, 9.975, -23.825, 18.3, -18.2, nan, nan, 18.3, -18.2, 23.9625, -9.875, nan, nan, 23.9625, -9.875, 25.85, 0, nan, nan, 25.85, 0, 23.9625, 9.8375, nan, nan, 23.9625, 9.8375, 18.3, 18.15, nan, nan, 18.3, 18.15, 9.975, 23.8125, nan, nan, 9.975, 23.8125, 0.1, 25.7, nan, nan, 0.1, 25.7, 0, 25.7, nan, nan, 0, 25.7, 0, 34.3, nan, nan, -9.78008, 23.7947, 0, 25.7, nan, nan, -18.05, 18.15, -9.78008, 23.7947, nan, nan, -23.7034, 9.84639, -18.05, 18.15, nan, nan, -25.6, 0, -23.7034, 9.84639, nan, nan, -25.6, -0.05, -25.6, 0, nan, nan, -23.7125, -9.8875, -25.6, -0.05, nan, nan, -18.05, -18.2, -23.7125, -9.8875, nan, nan, -9.78008, -23.8071, -18.05, -18.2, nan, nan, 0, -25.7, -9.78008, -23.8071, nan, nan, -25.6, 0, -51.4, 0, nan, nan, 25.85, 0, 51.45, 0, nan, nan)
width = 1.0
default_color = Color(0, 0, 0, 1)
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2

[node name="color" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="color"]

[node name="Shape" type="Node2D" parent="color/Frame 0"]

[node name="@@6101" type="Polygon2D" parent="color/Frame 0/Shape"]
polygon = PackedVector2Array(242.8, 197.675, 256.2, 197.675, 256.2, 226.225, 242.8, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6102" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(0, 0, 0, 1)
polygon = PackedVector2Array(336.55, 197.675, 349.95, 197.675, 349.95, 226.225, 336.55, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6103" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(1, 0, 0, 1)
polygon = PackedVector2Array(309.75, 197.675, 323.15, 197.675, 323.15, 226.225, 309.75, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6104" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(1, 1, 0, 1)
polygon = PackedVector2Array(256.2, 197.675, 269.6, 197.675, 269.6, 226.225, 256.2, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6105" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(0, 1, 1, 1)
polygon = PackedVector2Array(269.6, 197.675, 283, 197.675, 283, 226.225, 269.6, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6106" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(0, 1, 0, 1)
polygon = PackedVector2Array(283, 197.675, 296.4, 197.675, 296.4, 226.225, 283, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6107" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(1, 0, 1, 1)
polygon = PackedVector2Array(296.4, 197.675, 309.75, 197.675, 309.75, 226.225, 296.4, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6108" type="Polygon2D" parent="color/Frame 0/Shape"]
color = Color(0, 0, 1, 1)
polygon = PackedVector2Array(323.15, 197.675, 336.55, 197.675, 336.55, 226.225, 323.15, 226.225)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])

[node name="@@6109" type="Polygon2D" parent="color/Frame 0/Shape"]
polygon = PackedVector2Array(242.75, 226.225, 349.8, 226.225, 349.8, 232.6, 242.75, 232.6)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])
script = ExtResource("2_ch08a")
matrix = Transform2D(0.0653687, 0, 0, 0.00387573, 296.25, 229.4)
entries_color = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)
entries_ratio = PackedFloat32Array(0, 1)
spread_method_reflect = false

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="AS2" type="Node" parent="Layer 1/Frame 0"]
script = SubResource("GDScript_d4ufd")
