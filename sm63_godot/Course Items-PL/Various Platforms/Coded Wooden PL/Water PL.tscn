[gd_scene load_steps=8 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_6sc1c"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_vpjvg"]

[sub_resource type="Animation" id="Animation_cajxd"]
length = 0.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 2/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 2/Frame 1:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Layer 2/Frame 2:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Layer 3/Frame 0:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Layer 3/Frame 1:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Layer 3/Frame 2:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Layer 1/Frame 0:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_q8y5y"]
_data = {
"Default": SubResource("Animation_cajxd")
}

[sub_resource type="GDScript" id="GDScript_6bgya"]
script/source = "extends Node
# //Rises if _y-1 is touching Water AND _y-8 is NOT touching Ground.
# //Lowers if _y is NOT touching Water.
# //If .hitTest Mario's feet, then clip._y lowers
# //If NOT ^^^, then clip._y goes to normal
# if (Scale == undefined) {
# 	Scale = 1;
# }
# "

[sub_resource type="GDScript" id="GDScript_hbhka"]
script/source = "extends Node
# //WaterPLGround 
# depth = _root.Course.BPlatforms.getNextHighestDepth();
# _root.Course.BPlatforms.attachMovie(\"WaterPLGround\", \"WaterPLGround\"+depth, depth, {_x:_x, _y:_y});
# //
# olddiffy = _y;
# diffy = 0;
# //
# //Y = _root[\"M2-1WaterLevel\"];
# //_y = Y+420;
# weightY = 0;
# //
# yspeed = 0;
# //
# onEnterFrame = function () {
# 	//
# 	clip.gotoAndStop(Scale);
# 	//
# 	olddiffy = _y;
# 	//
# 	count = 0;
# 	while (_root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-count)+5)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		count++;
# 		if (count>7) {
# 			break;
# 		}
# 	}
# 	//  
# 	if (!_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-8)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		yspeed -= count/15;
# 	}
# 	count = 0;
# 	while (!_root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y+count)+5)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		count++;
# 		if (count>7) {
# 			break;
# 		}
# 	}
# 	if (!_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+8)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		yspeed += count/15;
# 	}
# 	//                   
# 	_rotation *= 0.7;
# 	count = 0;
# 	while (_root.Course.Water.hitTest(((_x+25*Scale)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-count)+5)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		count++;
# 		if (count>9) {
# 			break;
# 		}
# 	}
# 	_rotation += count/Scale;
# 	count = 0;
# 	while (_root.Course.Water.hitTest(((_x-25*Scale)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, (((_y-count)+5)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		count++;
# 		if (count>9) {
# 			break;
# 		}
# 	}
# 	_rotation -= count/Scale;
# 	count = 0;
# 	//
# 	/* 
# 	if (_root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-3)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) && !_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+8)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 	yspeed--;
# 	}
# 	if (_root.Course.Water.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true) && !_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-8)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 	yspeed++;
# 	}
# 	*/
# 	//weightY *= 0.7; 
# 	_y += yspeed;
# 	yspeed *= 0.8;
# 	yspeed = Math.max(yspeed, -3);
# 	yspeed = Math.min(yspeed, 3);
# 	//
# 	while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y-7)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		_y++;
# 	}
# 	while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+(_parent._x*_root.coursescale/100)+_root.Course._x, ((_y+7)*_root.coursescale/100)+(_parent._y*_root.coursescale/100)+_root.Course._y, true)) {
# 		_y--;
# 	}
# 	diffy = olddiffy-_y;
# 	//
# 	tellTarget (_root.Course.BPlatforms[\"WaterPLGround\"+depth]) {
# 		_xscale = this.Scale*100;
# 		//
# 		_rotation = this._rotation;
# 		_y = this._y;
# 		_x = this._x;
# 		//
# 		if (hitTest((_root.Course.Char._x*_root.coursescale/100)+_root.Course._x, ((_root.Course.Char._y+this.diffy+3)*_root.coursescale/100)+_root.Course._y, true) && _root.Course.Char.yspeed>-3) {
# 			//_root.Course.Char._x += this.diffx;
# 			_root.Course.Char._y -= this.yspeed;
# 			//
# 			distance = (_root.Course.Char._x-(_x+_parent._x))/this.Scale;
# 			distance = Math.min(60, distance);
# 			distance = Math.max(-60, distance);
# 			this._rotation += distance/15;
# 			//_root.Course.Char.xspeed = _root.groundFriction(_root.Course.Char.xspeed, 0.3, 1.1);
# 			if (landedon == false) {
# 				this.yspeed += (_root.Course.Char.yspeed/3)/this.Scale;
# 				//_root.Course.Char.xspeed -= this.diffx;
# 			}
# 			landedon = true;
# 		} else {
# 			this.weightY *= 0.3;
# 			if (landedon == true) {
# 				this.yspeed -= (_root.Course.Char.yspeed/5)/this.Scale;
# 				//
# 				distance = (_root.Course.Char._x-(_x+_parent._x))/this.Scale;
# 				distance = Math.min(60, distance);
# 				distance = Math.max(-60, distance);
# 				this._rotation += (distance*Math.abs(_root.Course.Char.yspeed/5))/25;
# 				//_root.Course.Char.xspeed += this.diffx;
# 				//_root.Course.Char.yspeed -= this.yspeed/2;
# 			}
# 			landedon = false;
# 		}
# 		_rotation = this._rotation;
# 		_y = this._y;
# 		_x = this._x;
# 	}
# };
# "

[sub_resource type="GDScript" id="GDScript_q3m85"]
script/source = "extends Node
# stop();
# "

[node name="Water PL" type="Node2D"]
script = ExtResource("1_6sc1c")
source_xml = "res://sm63/LIBRARY/Course Items-PL/Various Platforms/Coded Wooden PL/Water PL.xml"
linkage = "WaterPLclip"
linkage_export = true
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_q8y5y")
}

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 1/Frame 0"]
script = ExtResource("2_vpjvg")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Coded Wooden PL/Water PL clip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 3" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 3"]

[node name="Frame 1" type="Node2D" parent="Layer 3"]
visible = false

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 3/Frame 1"]
script = ExtResource("2_vpjvg")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Coded Wooden PL/Water PL Ground.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 0.5
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Frame 2" type="Node2D" parent="Layer 3"]
visible = false

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="AS2" type="Node" parent="Layer 2/Frame 0"]
script = SubResource("GDScript_6bgya")

[node name="Frame 1" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 1"]
script = SubResource("GDScript_hbhka")

[node name="Frame 2" type="Node2D" parent="Layer 2"]
visible = false

[node name="AS2" type="Node" parent="Layer 2/Frame 2"]
script = SubResource("GDScript_q3m85")
