[gd_scene load_steps=6 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_vmkua"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_ocx18"]

[sub_resource type="Animation" id="Animation_e7ehb"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 1/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 2/Frame 0:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_s28io"]
_data = {
"Default": SubResource("Animation_e7ehb")
}

[sub_resource type="GDScript" id="GDScript_4o8p8"]
script/source = "extends Node
# _xscale = 100;
# _yscale = 100;
# if (distance == undefined) {
# 	distance = 150;
# }
# if (angle == undefined) {
# 	angle = 70;
# }
# if (thickness == undefined) {
# 	thickness = 20;
# }
# if (bellsize == undefined) {
# 	bellsize = 50;
# }
# if (basesize == undefined) {
# 	basesize = 30;
# }
# if (speed == undefined) {
# 	speed = 0.8;
# }
# if (graphic == undefined) {
# 	graphic = false;
# }
# //              
# if (graphic == false) {
# 	depth = _root.Course.Platforms.getNextHighestDepth();
# 	_root.Course.Platforms.attachMovie(\"Clock Arrow Ground\", \"PendelumGround\"+depth, depth, {_x:_x, _y:_y});
# }
# //                       
# rotspeed = speed;
# //
# count = 0;
# base._yscale = basesize;
# base._xscale = basesize;
# arm._xscale = thickness;
# arm._yscale = distance;
# arm._rotation = angle;
# bell._yscale = bellsize;
# bell._xscale = bellsize;
# bell._y = Math.cos(_root.angleToRadians(angle))*distance;
# bell._x = -Math.sin(_root.angleToRadians(angle))*distance;
# //
# newx = bell._x;
# oldx = bell._x;
# newy = bell._y;
# oldy = bell._y;
# //
# onEnterFrame = function () {
# 	if (_root.PauseGame == false && _root.playpause == false) {
# 		newx = bell._x;
# 		newy = bell._y;
# 		diffy = newy-oldy;
# 		diffx = newx-oldx;
# 		oldx = newx;
# 		oldy = newy;
# 		//
# 		base._yscale = basesize;
# 		base._xscale = basesize;
# 		arm._xscale = thickness;
# 		arm._yscale = distance;
# 		arm._rotation = angle;
# 		bell._yscale = bellsize;
# 		bell._xscale = bellsize;
# 		bell._rotation = angle;
# 		bell._y = Math.cos(_root.angleToRadians(angle))*distance;
# 		bell._x = -Math.sin(_root.angleToRadians(angle))*distance;
# 		if (graphic == false) {
# 			tellTarget (_root.Course.Platforms[\"PendelumGround\"+depth]) {
# 				_y = this._y+Math.cos(_root.angleToRadians(this.angle))*this.distance;
# 				_x = this._x-Math.sin(_root.angleToRadians(this.angle))*this.distance;
# 				_rotation = this.angle;
# 				_yscale = this.bellsize;
# 				_xscale = this.bellsize;
# 				// Mario hit
# 				if (hitTest((_root.Course.Char._x*_root.coursescale/100)+_root.Course._x, ((_root.Course.Char._y+3)*_root.coursescale/100)+_root.Course._y, true)) {
# 					_root.Course.Char._x += this.diffx;
# 					_root.Course.Char._y += this.diffY;
# 					//
# 					_root.Course.Char._x += (this.rotspeed*this.bellsize)/100;
# 					//
# 					_root.Course.Char.xspeed = _root.groundFriction(_root.Course.Char.xspeed, 0.3, 1.1);
# 					if (landedon == false) {
# 						_root.Course.Char.xspeed -= this.diffx;
# 						//
# 					}
# 					landedon = true;
# 				} else {
# 					if (landedon == true) {
# 						_root.Course.Char.xspeed += this.diffx;
# 						_root.Course.Char.yspeed += this.diffy;
# 					}
# 					landedon = false;
# 				}
# 			}
# 		}
# 		//                      
# 		angle += rotspeed;
# 	}
# };
# "

[node name="Pendulum Arrow" type="Node2D"]
script = ExtResource("1_vmkua")
source_xml = "res://sm63/LIBRARY/Course Items-PL/Various Platforms/Themed PL/Clock Themed/Pendulum Arrow.xml"
linkage = "PendulumArrow"
linkage_export = true
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_s28io")
}

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 2/Frame 0"]
script = ExtResource("2_ocx18")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Themed PL/Clock Themed/Pendelum Arm.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="@DOMSymbolInstance@48074" type="Node2D" parent="Layer 2/Frame 0"]
script = ExtResource("2_ocx18")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Themed PL/Clock Themed/Pendelum Base.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="@DOMSymbolInstance@48075" type="Node2D" parent="Layer 2/Frame 0"]
position = Vector2(0, 150)
script = ExtResource("2_ocx18")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Themed PL/Clock Themed/Clock Arrow.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="AS2" type="Node" parent="Layer 1/Frame 0"]
script = SubResource("GDScript_4o8p8")
