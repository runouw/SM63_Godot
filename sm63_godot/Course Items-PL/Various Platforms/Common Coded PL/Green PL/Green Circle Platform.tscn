[gd_scene load_steps=6 format=3]

[ext_resource type="Script" path="res://xfl_parse/symbol_item/symbol_item.gd" id="1_gmf4p"]
[ext_resource type="Script" path="res://xfl_parse/symbol/symbol_instance.gd" id="2_b4c24"]

[sub_resource type="Animation" id="Animation_wxh18"]
length = 0.0666667
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Layer 3/Frame 0:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Layer 3/Frame 1:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Layer 1/Frame 0:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Layer 1/Frame 1:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Layer 2/Frame 0:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.0333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Layer 2/Frame 1:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_a4kjk"]
_data = {
"Default": SubResource("Animation_wxh18")
}

[sub_resource type="GDScript" id="GDScript_6n5in"]
script/source = "extends Node
# stop();
# if (scale == undefined) {
# 	scale = 2;
# }
# if (angle == undefined) {
# 	angle = 0;
# }
# if (distance == undefined) {
# 	distance = 50;
# }
# if (speed == undefined) {
# 	speed = 5;
# }
# if (dotdistance == undefined) {
# 	dotdistance = 20;
# }
# if (armscale == undefined) {
# 	armscale = 0;
# }
# if (dotdistance<360) {
# 	for (i=0; i<360; i += dotdistance) {
# 		clip.attachMovie(\"Path dot\", \"dot\"+clip.getNextHighestDepth(), clip.getNextHighestDepth(), {_y:Math.cos(_root.angleToRadians(i))*distance, _x:-Math.sin(_root.angleToRadians(i))*distance});
# 	}
# }
# if (armscale>0) {
# 	clip.attachMovie(\"PL circle arm\", \"PLarm\", clip.getNextHighestDepth(), {_y:Math.cos(_root.angleToRadians(angle))*distance, _x:-Math.sin(_root.angleToRadians(angle))*distance, _rotation:angle-180});
# }
# depth = _root.Course.BPlatforms.getNextHighestDepth();
# _root.Course.BPlatforms.attachMovie(\"GreenPLcode\", \"GreenPL\"+depth, depth, {_x:_x, _y:_y, scale:scale});
# //
# pl._y = Math.cos(_root.angleToRadians(angle))*distance;
# pl._x = -Math.sin(_root.angleToRadians(angle))*distance;
# pl.gotoAndStop(scale);
# //
# newx = pl._x;
# newy = pl._y;
# oldx = newx;
# oldy = newy;
# //
# onEnterFrame = function () {
# 	if (_root.PauseGame == false && _root.playpause == false) {
# 		pl._y += diffy;
# 		angle += speed;
# 		newx = -Math.sin(_root.angleToRadians(angle))*distance;
# 		newy = Math.cos(_root.angleToRadians(angle))*distance;
# 		diffy = newy-oldy;
# 		diffx = newx-oldx;
# 		oldx = newx;
# 		oldy = newy;
# 		pl._x += diffx;
# 		pl._y += diffy;
# 		//             
# 		if (Math.abs((_root.currentCamX)-(_x+_parent._x))<(600+(distance*2)) && Math.abs((_root.currentCamY)-(_y+_parent._y))<(600+(distance*2))) {
# 			tellTarget (_root.Course.BPlatforms[\"GreenPL\"+depth]) {
# 				if (hitTest((_root.Course.Char._x*_root.coursescale/100)+_root.Course._x, ((_root.Course.Char._y+this.diffy+4)*_root.coursescale/100)+_root.Course._y, false) && _root.Course.Char.yspeed>-3) {
# 					_root.Course.Char._x += this.diffx;
# 					_root.Course.Char._y += this.diffy;
# 					_root.Course.Char.xspeed = _root.groundFriction(_root.Course.Char.xspeed, 0.3, 1.1);
# 					if (landedon == false) {
# 						_root.Course.Char.xspeed -= this.diffx/2;
# 					}
# 					landedon = true;
# 				} else {
# 					if (landedon == true) {
# 						_root.Course.Char.xspeed += this.diffx;
# 						_root.Course.Char.yspeed += this.diffy;
# 					}
# 					landedon = false;
# 				}
# 				_y = this._y+this.pl._y;
# 				_x = this._x+this.pl._x;
# 			}
# 		}
# 		pl._y -= diffy;
# 		if (armscale>0) {
# 			clip.PLarm._y = pl._y;
# 			clip.PLarm._x = pl._x;
# 			clip.PLarm._rotation = _root.radiansToAngle(Math.atan2(pl._y, pl._x))+90;
# 			clip.PLarm._yscale = armscale;
# 		}
# 	}
# };
# "

[node name="Green Circle Platform" type="Node2D"]
script = ExtResource("1_gmf4p")
source_xml = "res://sm63/LIBRARY/Course Items-PL/Various Platforms/Common Coded PL/Green PL/Green Circle Platform.xml"
linkage = "GreenCirclePlatform"
linkage_export = true
regenerate = false

[node name="Timeline" type="AnimationPlayer" parent="."]
libraries = {
"Timeline": SubResource("AnimationLibrary_a4kjk")
}

[node name="Layer 2" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 2"]

[node name="Frame 1" type="Node2D" parent="Layer 2"]
visible = false

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 2/Frame 1"]
script = ExtResource("2_b4c24")
path = "res://sm63_godot/Xtra/Empty Movieclip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 1" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 1"]

[node name="Shape" type="Node2D" parent="Layer 1/Frame 0"]

[node name="@@47965" type="Line2D" parent="Layer 1/Frame 0/Shape"]
width = 1.0
default_color = Color(0.6, 0.6, 0.6, 1)
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 1/Frame 0"]
script = ExtResource("2_b4c24")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Common Coded PL/Green PL/Green PL Clip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Frame 1" type="Node2D" parent="Layer 1"]
visible = false

[node name="DOMSymbolInstance" type="Node2D" parent="Layer 1/Frame 1"]
script = ExtResource("2_b4c24")
path = "res://sm63_godot/Course Items-PL/Various Platforms/Common Coded PL/Green PL/Green PL Clip.tscn"
red_multiplier = 1.0
green_multiplier = 1.0
blue_multiplier = 1.0
alpha_multiplier = 1.0
red_offset = 0.0
green_offset = 0.0
blue_offset = 0.0
tint_multiplier = 0.0
tint_color = Color(0, 0, 0, 1)
brightness = 0.0

[node name="Layer 3" type="Node2D" parent="."]

[node name="Frame 0" type="Node2D" parent="Layer 3"]

[node name="Frame 1" type="Node2D" parent="Layer 3"]
visible = false

[node name="AS2" type="Node" parent="Layer 3/Frame 1"]
script = SubResource("GDScript_6n5in")
