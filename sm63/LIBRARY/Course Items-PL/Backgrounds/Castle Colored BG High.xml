<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="  Course Items-PL/ Backgrounds/Castle Colored BG High" itemID="47ee8b4d-00001bbb" linkageExportForAS="true" linkageExportInFirstFrame="false" linkageIdentifier="CastleColoredBGHigh" lastModified="1206815643">
  <timeline>
    <DOMTimeline name="Castle Colored BG High">
      <layers>
        <DOMLayer name="Layer 3" color="#FFFF4F">
          <frames>
            <DOMFrame index="0" duration="2" keyMode="9728">
              <Actionscript>
                <script><![CDATA[onEnterFrame = function () {
	if (_root.BGquality == "LOW") {
		gotoAndStop(2);
	} else {
		gotoAndStop(1);
	}
};
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 1" color="#4FFF4F" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="  Course Items-PL/ Backgrounds/Hills+Ground Background 1 Part">
                  <matrix>
                    <Matrix tx="-1" ty="-100"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load) {
	color = Math.round(_root.TotalStars*1.5)+25;
	color2 = Math.abs(100-color);
	myColor = new Color(this);
	colorTrans = new Object();
	colorTrans = {ra:100-(color2/2+Math.max(color2-50, 0))-color2/5, rb:0, ga:color, gb:0, ba:color, bb:0, aa:100, ab:0};
	myColor.setTransform(colorTrans);
}
onClipEvent (enterFrame) {
	color += Math.round(((_root.TotalStars*1.5)+25)-color)/7;
	if (_root.CheatCastleRestore == true) {
		color = 100;
	}
	//color = Math.max(color, 0);        
	//color = Math.min(color, 100);
	if (color>100) {
		oldcolor = color;
		color += Math.abs(100-color)*2.5;
	}
	color2 = Math.abs(100-color);
	// color = percent of stars obained
	// color 2  = percent of stars not yet obtained
	colorTrans = {ra:(color*0.5)+50-(color2/3), rb:0, ga:(color*0.5)+50-(color2/3), gb:0, ba:(color*0.5)+50-(color2/3), bb:0, aa:100, ab:0};
	myColor.setTransform(colorTrans);
	if (color>100) {
		color = oldcolor;
	}
}
]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="1" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>